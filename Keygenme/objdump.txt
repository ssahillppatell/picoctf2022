
keygenme:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__cxa_finalize@plt-0xd4b>
 328:	78 38                	js     362 <__cxa_finalize@plt-0xd3e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 08                	add    %cl,(%rax)
 369:	46 9c                	rex.RX pushfq 
 36b:	9c                   	pushfq 
 36c:	13 57 9e             	adc    -0x62(%rdi),%edx
 36f:	a9 de c8 43 91       	test   $0x9143c8de,%eax
 374:	c2 97 87             	retq   $0x8797
 377:	99                   	cltd   
 378:	bf                   	.byte 0xbf
 379:	04 bf                	add    $0xbf,%al
 37b:	68                   	.byte 0x68

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	0c 00                	or     $0x0,%al
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 a1 00 80 00 00    	add    %ah,0x8000(%rcx)
 3b7:	00 0c 00             	add    %cl,(%rax,%rax,1)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	0d 00 00 00 d1       	or     $0xd1000000,%eax
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	insl   (%dx),%es:(%rdi)
 3c4:	67 55                	addr32 push %rbp
 3c6:	61                   	(bad)  
 3c7:	10                   	.byte 0x10

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	66 00 00             	data16 add %al,(%rax)
 3e3:	00 12                	add    %dl,(%rdx)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 12                	add    %dl,(%rdx)
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 20                	add    %ah,(%rax)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 6d 00             	add    %ch,0x0(%rbp)
 412:	00 00                	add    %al,(%rax)
 414:	12 00                	adc    (%rax),%al
	...
 426:	00 00                	add    %al,(%rax)
 428:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 429:	00 00                	add    %al,(%rax)
 42b:	00 12                	add    %dl,(%rdx)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 89 00 00 00 12    	add    %cl,0x12000000(%rcx)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 21                	add    %ah,(%rcx)
 459:	00 00                	add    %al,(%rax)
 45b:	00 20                	add    %ah,(%rax)
	...
 46d:	00 00                	add    %al,(%rax)
 46f:	00 8f 00 00 00 12    	add    %cl,0x12000000(%rdi)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 3d 00 00 00 20    	add    %bh,0x20000000(%rip)        # 2000048d <stdin@@GLIBC_2.2.5+0x1fffc47d>
	...
 49d:	00 00                	add    %al,(%rax)
 49f:	00 57 00             	add    %dl,0x0(%rdi)
 4a2:	00 00                	add    %al,(%rax)
 4a4:	12 00                	adc    (%rax),%al
	...
 4b6:	00 00                	add    %al,(%rax)
 4b8:	65 00 00             	add    %al,%gs:(%rax)
 4bb:	00 12                	add    %dl,(%rdx)
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 72 00             	add    %dh,0x0(%rdx)
 4d2:	00 00                	add    %al,(%rax)
 4d4:	12 00                	adc    (%rax),%al
	...
 4e6:	00 00                	add    %al,(%rax)
 4e8:	96                   	xchg   %eax,%esi
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 22                	add    %ah,(%rdx)
	...
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 83 00 00 00 11    	add    %al,0x11000000(%rbx)
 505:	00 1a                	add    %bl,(%rdx)
 507:	00 10                	add    %dl,(%rax)
 509:	40 00 00             	add    %al,(%rax)
 50c:	00 00                	add    %al,(%rax)
 50e:	00 00                	add    %al,(%rax)
 510:	08 00                	or     %al,(%rax)
 512:	00 00                	add    %al,(%rax)
 514:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000000518 <.dynstr>:
 518:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 51c:	63 72 79             	movslq 0x79(%rdx),%esi
 51f:	70 74                	jo     595 <__cxa_finalize@plt-0xb0b>
 521:	6f                   	outsl  %ds:(%rsi),(%dx)
 522:	2e 73 6f             	jae,pn 594 <__cxa_finalize@plt-0xb0c>
 525:	2e 31 2e             	xor    %ebp,%cs:(%rsi)
 528:	31 00                	xor    %eax,(%rax)
 52a:	5f                   	pop    %rdi
 52b:	5f                   	pop    %rdi
 52c:	67 6d                	insl   (%dx),%es:(%edi)
 52e:	6f                   	outsl  %ds:(%rsi),(%dx)
 52f:	6e                   	outsb  %ds:(%rsi),(%dx)
 530:	5f                   	pop    %rdi
 531:	73 74                	jae    5a7 <__cxa_finalize@plt-0xaf9>
 533:	61                   	(bad)  
 534:	72 74                	jb     5aa <__cxa_finalize@plt-0xaf6>
 536:	5f                   	pop    %rdi
 537:	5f                   	pop    %rdi
 538:	00 5f 49             	add    %bl,0x49(%rdi)
 53b:	54                   	push   %rsp
 53c:	4d 5f                	rex.WRB pop %r15
 53e:	64 65 72 65          	fs gs jb 5a7 <__cxa_finalize@plt-0xaf9>
 542:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 549:	4d 
 54a:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 54c:	6f                   	outsl  %ds:(%rsi),(%dx)
 54d:	6e                   	outsb  %ds:(%rsi),(%dx)
 54e:	65 54                	gs push %rsp
 550:	61                   	(bad)  
 551:	62                   	(bad)  
 552:	6c                   	insb   (%dx),%es:(%rdi)
 553:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
 557:	54                   	push   %rsp
 558:	4d 5f                	rex.WRB pop %r15
 55a:	72 65                	jb     5c1 <__cxa_finalize@plt-0xadf>
 55c:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 563:	4d 
 564:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 566:	6f                   	outsl  %ds:(%rsi),(%dx)
 567:	6e                   	outsb  %ds:(%rsi),(%dx)
 568:	65 54                	gs push %rsp
 56a:	61                   	(bad)  
 56b:	62                   	(bad)  
 56c:	6c                   	insb   (%dx),%es:(%rdi)
 56d:	65 00 4d 44          	add    %cl,%gs:0x44(%rbp)
 571:	35 00 6c 69 62       	xor    $0x62696c00,%eax
 576:	63 2e                	movslq (%rsi),%ebp
 578:	73 6f                	jae    5e9 <__cxa_finalize@plt-0xab7>
 57a:	2e 36 00 73 70       	cs add %dh,%ss:0x70(%rbx)
 57f:	72 69                	jb     5ea <__cxa_finalize@plt-0xab6>
 581:	6e                   	outsb  %ds:(%rsi),(%dx)
 582:	74 66                	je     5ea <__cxa_finalize@plt-0xab6>
 584:	00 70 75             	add    %dh,0x75(%rax)
 587:	74 73                	je     5fc <__cxa_finalize@plt-0xaa4>
 589:	00 5f 5f             	add    %bl,0x5f(%rdi)
 58c:	73 74                	jae    602 <__cxa_finalize@plt-0xa9e>
 58e:	61                   	(bad)  
 58f:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 592:	63 68 6b             	movslq 0x6b(%rax),%ebp
 595:	5f                   	pop    %rdi
 596:	66 61                	data16 (bad) 
 598:	69 6c 00 73 74 64 69 	imul   $0x6e696474,0x73(%rax,%rax,1),%ebp
 59f:	6e 
 5a0:	00 66 67             	add    %ah,0x67(%rsi)
 5a3:	65 74 73             	gs je  619 <__cxa_finalize@plt-0xa87>
 5a6:	00 73 74             	add    %dh,0x74(%rbx)
 5a9:	72 6c                	jb     617 <__cxa_finalize@plt-0xa89>
 5ab:	65 6e                	outsb  %gs:(%rsi),(%dx)
 5ad:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5b0:	63 78 61             	movslq 0x61(%rax),%edi
 5b3:	5f                   	pop    %rdi
 5b4:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 5ba:	7a 65                	jp     621 <__cxa_finalize@plt-0xa7f>
 5bc:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5bf:	6c                   	insb   (%dx),%es:(%rdi)
 5c0:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 5c7:	72 74                	jb     63d <__cxa_finalize@plt-0xa63>
 5c9:	5f                   	pop    %rdi
 5ca:	6d                   	insl   (%dx),%es:(%rdi)
 5cb:	61                   	(bad)  
 5cc:	69 6e 00 4f 50 45 4e 	imul   $0x4e45504f,0x0(%rsi),%ebp
 5d3:	53                   	push   %rbx
 5d4:	53                   	push   %rbx
 5d5:	4c 5f                	rex.WR pop %rdi
 5d7:	31 5f 31             	xor    %ebx,0x31(%rdi)
 5da:	5f                   	pop    %rdi
 5db:	30 00                	xor    %al,(%rax)
 5dd:	47                   	rex.RXB
 5de:	4c                   	rex.WR
 5df:	49                   	rex.WB
 5e0:	42                   	rex.X
 5e1:	43 5f                	rex.XB pop %r15
 5e3:	32 2e                	xor    (%rsi),%ch
 5e5:	34 00                	xor    $0x0,%al
 5e7:	47                   	rex.RXB
 5e8:	4c                   	rex.WR
 5e9:	49                   	rex.WB
 5ea:	42                   	rex.X
 5eb:	43 5f                	rex.XB pop %r15
 5ed:	32 2e                	xor    (%rsi),%ch
 5ef:	32 2e                	xor    (%rsi),%ch
 5f1:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000000005f4 <.gnu.version>:
 5f4:	00 00                	add    %al,(%rax)
 5f6:	02 00                	add    (%rax),%al
 5f8:	00 00                	add    %al,(%rax)
 5fa:	02 00                	add    (%rax),%al
 5fc:	02 00                	add    (%rax),%al
 5fe:	02 00                	add    (%rax),%al
 600:	00 00                	add    %al,(%rax)
 602:	02 00                	add    (%rax),%al
 604:	00 00                	add    %al,(%rax)
 606:	03 00                	add    (%rax),%eax
 608:	02 00                	add    (%rax),%al
 60a:	04 00                	add    $0x0,%al
 60c:	02 00                	add    (%rax),%al
 60e:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000610 <.gnu.version_r>:
 610:	01 00                	add    %eax,(%rax)
 612:	01 00                	add    %eax,(%rax)
 614:	01 00                	add    %eax,(%rax)
 616:	00 00                	add    %al,(%rax)
 618:	10 00                	adc    %al,(%rax)
 61a:	00 00                	add    %al,(%rax)
 61c:	20 00                	and    %al,(%rax)
 61e:	00 00                	add    %al,(%rax)
 620:	10 1f                	adc    %bl,(%rdi)
 622:	6d                   	insl   (%dx),%es:(%rdi)
 623:	06                   	(bad)  
 624:	00 00                	add    %al,(%rax)
 626:	03 00                	add    (%rax),%eax
 628:	b7 00                	mov    $0x0,%bh
 62a:	00 00                	add    %al,(%rax)
 62c:	00 00                	add    %al,(%rax)
 62e:	00 00                	add    %al,(%rax)
 630:	01 00                	add    %eax,(%rax)
 632:	02 00                	add    (%rax),%al
 634:	5b                   	pop    %rbx
 635:	00 00                	add    %al,(%rax)
 637:	00 10                	add    %dl,(%rax)
 639:	00 00                	add    %al,(%rax)
 63b:	00 00                	add    %al,(%rax)
 63d:	00 00                	add    %al,(%rax)
 63f:	00 14 69             	add    %dl,(%rcx,%rbp,2)
 642:	69 0d 00 00 04 00 c5 	imul   $0xc5,0x40000(%rip),%ecx        # 4064c <stdin@@GLIBC_2.2.5+0x3c63c>
 649:	00 00 00 
 64c:	10 00                	adc    %al,(%rax)
 64e:	00 00                	add    %al,(%rax)
 650:	75 1a                	jne    66c <__cxa_finalize@plt-0xa34>
 652:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 658:	cf                   	iret   
 659:	00 00                	add    %al,(%rax)
 65b:	00 00                	add    %al,(%rax)
 65d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000660 <.rela.dyn>:
 660:	78 3d                	js     69f <__cxa_finalize@plt-0xa01>
 662:	00 00                	add    %al,(%rax)
 664:	00 00                	add    %al,(%rax)
 666:	00 00                	add    %al,(%rax)
 668:	08 00                	or     %al,(%rax)
 66a:	00 00                	add    %al,(%rax)
 66c:	00 00                	add    %al,(%rax)
 66e:	00 00                	add    %al,(%rax)
 670:	00 12                	add    %dl,(%rdx)
 672:	00 00                	add    %al,(%rax)
 674:	00 00                	add    %al,(%rax)
 676:	00 00                	add    %al,(%rax)
 678:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 67f <__cxa_finalize@plt-0xa21>
 67f:	00 08                	add    %cl,(%rax)
 681:	00 00                	add    %al,(%rax)
 683:	00 00                	add    %al,(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 c0                	add    %al,%al
 689:	11 00                	adc    %eax,(%rax)
 68b:	00 00                	add    %al,(%rax)
 68d:	00 00                	add    %al,(%rax)
 68f:	00 08                	add    %cl,(%rax)
 691:	40 00 00             	add    %al,(%rax)
 694:	00 00                	add    %al,(%rax)
 696:	00 00                	add    %al,(%rax)
 698:	08 00                	or     %al,(%rax)
 69a:	00 00                	add    %al,(%rax)
 69c:	00 00                	add    %al,(%rax)
 69e:	00 00                	add    %al,(%rax)
 6a0:	08 40 00             	or     %al,0x0(%rax)
 6a3:	00 00                	add    %al,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 d8                	add    %bl,%al
 6a9:	3f                   	(bad)  
 6aa:	00 00                	add    %al,(%rax)
 6ac:	00 00                	add    %al,(%rax)
 6ae:	00 00                	add    %al,(%rax)
 6b0:	06                   	(bad)  
 6b1:	00 00                	add    %al,(%rax)
 6b3:	00 02                	add    %al,(%rdx)
	...
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 e0                	add    %ah,%al
 6c1:	3f                   	(bad)  
 6c2:	00 00                	add    %al,(%rax)
 6c4:	00 00                	add    %al,(%rax)
 6c6:	00 00                	add    %al,(%rax)
 6c8:	06                   	(bad)  
 6c9:	00 00                	add    %al,(%rax)
 6cb:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 6d6:	00 00                	add    %al,(%rax)
 6d8:	e8 3f 00 00 00       	callq  71c <__cxa_finalize@plt-0x984>
 6dd:	00 00                	add    %al,(%rax)
 6df:	00 06                	add    %al,(%rsi)
 6e1:	00 00                	add    %al,(%rax)
 6e3:	00 06                	add    %al,(%rsi)
	...
 6ed:	00 00                	add    %al,(%rax)
 6ef:	00 f0                	add    %dh,%al
 6f1:	3f                   	(bad)  
 6f2:	00 00                	add    %al,(%rax)
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	06                   	(bad)  
 6f9:	00 00                	add    %al,(%rax)
 6fb:	00 08                	add    %cl,(%rax)
	...
 705:	00 00                	add    %al,(%rax)
 707:	00 f8                	add    %bh,%al
 709:	3f                   	(bad)  
 70a:	00 00                	add    %al,(%rax)
 70c:	00 00                	add    %al,(%rax)
 70e:	00 00                	add    %al,(%rax)
 710:	06                   	(bad)  
 711:	00 00                	add    %al,(%rax)
 713:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 71e:	00 00                	add    %al,(%rax)
 720:	10 40 00             	adc    %al,0x0(%rax)
 723:	00 00                	add    %al,(%rax)
 725:	00 00                	add    %al,(%rax)
 727:	00 05 00 00 00 0d    	add    %al,0xd000000(%rip)        # d00072d <stdin@@GLIBC_2.2.5+0xcffc71d>
	...

Disassembly of section .rela.plt:

0000000000000738 <.rela.plt>:
 738:	a0 3f 00 00 00 00 00 	movabs 0x70000000000003f,%al
 73f:	00 07 
 741:	00 00                	add    %al,(%rax)
 743:	00 01                	add    %al,(%rcx)
	...
 74d:	00 00                	add    %al,(%rax)
 74f:	00 a8 3f 00 00 00    	add    %ch,0x3f(%rax)
 755:	00 00                	add    %al,(%rax)
 757:	00 07                	add    %al,(%rdi)
 759:	00 00                	add    %al,(%rax)
 75b:	00 03                	add    %al,(%rbx)
	...
 765:	00 00                	add    %al,(%rax)
 767:	00 b0 3f 00 00 00    	add    %dh,0x3f(%rax)
 76d:	00 00                	add    %al,(%rax)
 76f:	00 07                	add    %al,(%rdi)
 771:	00 00                	add    %al,(%rax)
 773:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 779 <__cxa_finalize@plt-0x927>
 779:	00 00                	add    %al,(%rax)
 77b:	00 00                	add    %al,(%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 b8 3f 00 00 00    	add    %bh,0x3f(%rax)
 785:	00 00                	add    %al,(%rax)
 787:	00 07                	add    %al,(%rdi)
 789:	00 00                	add    %al,(%rax)
 78b:	00 07                	add    %al,(%rdi)
	...
 795:	00 00                	add    %al,(%rax)
 797:	00 c0                	add    %al,%al
 799:	3f                   	(bad)  
 79a:	00 00                	add    %al,(%rax)
 79c:	00 00                	add    %al,(%rax)
 79e:	00 00                	add    %al,(%rax)
 7a0:	07                   	(bad)  
 7a1:	00 00                	add    %al,(%rax)
 7a3:	00 09                	add    %cl,(%rcx)
	...
 7ad:	00 00                	add    %al,(%rax)
 7af:	00 c8                	add    %cl,%al
 7b1:	3f                   	(bad)  
 7b2:	00 00                	add    %al,(%rax)
 7b4:	00 00                	add    %al,(%rax)
 7b6:	00 00                	add    %al,(%rax)
 7b8:	07                   	(bad)  
 7b9:	00 00                	add    %al,(%rax)
 7bb:	00 0a                	add    %cl,(%rdx)
	...
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 d0                	add    %dl,%al
 7c9:	3f                   	(bad)  
 7ca:	00 00                	add    %al,(%rax)
 7cc:	00 00                	add    %al,(%rax)
 7ce:	00 00                	add    %al,(%rax)
 7d0:	07                   	(bad)  
 7d1:	00 00                	add    %al,(%rax)
 7d3:	00 0b                	add    %cl,(%rbx)
	...

Disassembly of section .init:

0000000000001000 <.init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c9 2f 00 00 	mov    0x2fc9(%rip),%rax        # 3fd8 <__stack_chk_fail@plt+0x2ec8>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <__cxa_finalize@plt-0x8a>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 6a 2f 00 00    	pushq  0x2f6a(%rip)        # 3f90 <__stack_chk_fail@plt+0x2e80>
    1026:	f2 ff 25 6b 2f 00 00 	bnd jmpq *0x2f6b(%rip)        # 3f98 <__stack_chk_fail@plt+0x2e88>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0x80>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0x80>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0x80>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0x80>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0x80>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0x80>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <__cxa_finalize@plt-0x80>
    109f:	90                   	nop

Disassembly of section .plt.got:

00000000000010a0 <__cxa_finalize@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 4d 2f 00 00 	bnd jmpq *0x2f4d(%rip)        # 3ff8 <__stack_chk_fail@plt+0x2ee8>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010b0 <printf@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 e5 2e 00 00 	bnd jmpq *0x2ee5(%rip)        # 3fa0 <__stack_chk_fail@plt+0x2e90>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <puts@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 dd 2e 00 00 	bnd jmpq *0x2edd(%rip)        # 3fa8 <__stack_chk_fail@plt+0x2e98>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <fgets@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 d5 2e 00 00 	bnd jmpq *0x2ed5(%rip)        # 3fb0 <__stack_chk_fail@plt+0x2ea0>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <strlen@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 cd 2e 00 00 	bnd jmpq *0x2ecd(%rip)        # 3fb8 <__stack_chk_fail@plt+0x2ea8>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <MD5@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 c5 2e 00 00 	bnd jmpq *0x2ec5(%rip)        # 3fc0 <__stack_chk_fail@plt+0x2eb0>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <sprintf@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 bd 2e 00 00 	bnd jmpq *0x2ebd(%rip)        # 3fc8 <__stack_chk_fail@plt+0x2eb8>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <__stack_chk_fail@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 b5 2e 00 00 	bnd jmpq *0x2eb5(%rip)        # 3fd0 <__stack_chk_fail@plt+0x2ec0>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001120 <.text>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	31 ed                	xor    %ebp,%ebp
    1126:	49 89 d1             	mov    %rdx,%r9
    1129:	5e                   	pop    %rsi
    112a:	48 89 e2             	mov    %rsp,%rdx
    112d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1131:	50                   	push   %rax
    1132:	54                   	push   %rsp
    1133:	4c 8d 05 56 04 00 00 	lea    0x456(%rip),%r8        # 1590 <__stack_chk_fail@plt+0x480>
    113a:	48 8d 0d df 03 00 00 	lea    0x3df(%rip),%rcx        # 1520 <__stack_chk_fail@plt+0x410>
    1141:	48 8d 3d 43 03 00 00 	lea    0x343(%rip),%rdi        # 148b <__stack_chk_fail@plt+0x37b>
    1148:	ff 15 92 2e 00 00    	callq  *0x2e92(%rip)        # 3fe0 <__stack_chk_fail@plt+0x2ed0>
    114e:	f4                   	hlt    
    114f:	90                   	nop
    1150:	48 8d 3d b9 2e 00 00 	lea    0x2eb9(%rip),%rdi        # 4010 <stdin@@GLIBC_2.2.5>
    1157:	48 8d 05 b2 2e 00 00 	lea    0x2eb2(%rip),%rax        # 4010 <stdin@@GLIBC_2.2.5>
    115e:	48 39 f8             	cmp    %rdi,%rax
    1161:	74 15                	je     1178 <__stack_chk_fail@plt+0x68>
    1163:	48 8b 05 7e 2e 00 00 	mov    0x2e7e(%rip),%rax        # 3fe8 <__stack_chk_fail@plt+0x2ed8>
    116a:	48 85 c0             	test   %rax,%rax
    116d:	74 09                	je     1178 <__stack_chk_fail@plt+0x68>
    116f:	ff e0                	jmpq   *%rax
    1171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1180:	48 8d 3d 89 2e 00 00 	lea    0x2e89(%rip),%rdi        # 4010 <stdin@@GLIBC_2.2.5>
    1187:	48 8d 35 82 2e 00 00 	lea    0x2e82(%rip),%rsi        # 4010 <stdin@@GLIBC_2.2.5>
    118e:	48 29 fe             	sub    %rdi,%rsi
    1191:	48 89 f0             	mov    %rsi,%rax
    1194:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1198:	48 c1 f8 03          	sar    $0x3,%rax
    119c:	48 01 c6             	add    %rax,%rsi
    119f:	48 d1 fe             	sar    %rsi
    11a2:	74 14                	je     11b8 <__stack_chk_fail@plt+0xa8>
    11a4:	48 8b 05 45 2e 00 00 	mov    0x2e45(%rip),%rax        # 3ff0 <__stack_chk_fail@plt+0x2ee0>
    11ab:	48 85 c0             	test   %rax,%rax
    11ae:	74 08                	je     11b8 <__stack_chk_fail@plt+0xa8>
    11b0:	ff e0                	jmpq   *%rax
    11b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11b8:	c3                   	retq   
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	80 3d 4d 2e 00 00 00 	cmpb   $0x0,0x2e4d(%rip)        # 4018 <stdin@@GLIBC_2.2.5+0x8>
    11cb:	75 2b                	jne    11f8 <__stack_chk_fail@plt+0xe8>
    11cd:	55                   	push   %rbp
    11ce:	48 83 3d 22 2e 00 00 	cmpq   $0x0,0x2e22(%rip)        # 3ff8 <__stack_chk_fail@plt+0x2ee8>
    11d5:	00 
    11d6:	48 89 e5             	mov    %rsp,%rbp
    11d9:	74 0c                	je     11e7 <__stack_chk_fail@plt+0xd7>
    11db:	48 8b 3d 26 2e 00 00 	mov    0x2e26(%rip),%rdi        # 4008 <__stack_chk_fail@plt+0x2ef8>
    11e2:	e8 b9 fe ff ff       	callq  10a0 <__cxa_finalize@plt>
    11e7:	e8 64 ff ff ff       	callq  1150 <__stack_chk_fail@plt+0x40>
    11ec:	c6 05 25 2e 00 00 01 	movb   $0x1,0x2e25(%rip)        # 4018 <stdin@@GLIBC_2.2.5+0x8>
    11f3:	5d                   	pop    %rbp
    11f4:	c3                   	retq   
    11f5:	0f 1f 00             	nopl   (%rax)
    11f8:	c3                   	retq   
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1200:	f3 0f 1e fa          	endbr64 
    1204:	e9 77 ff ff ff       	jmpq   1180 <__stack_chk_fail@plt+0x70>
    1209:	f3 0f 1e fa          	endbr64 
    120d:	55                   	push   %rbp
    120e:	48 89 e5             	mov    %rsp,%rbp
    1211:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    1218:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
    121f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1226:	00 00 
    1228:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    122c:	31 c0                	xor    %eax,%eax
    122e:	48 b8 70 69 63 6f 43 	movabs $0x7b4654436f636970,%rax
    1235:	54 46 7b 
    1238:	48 ba 62 72 31 6e 67 	movabs $0x30795f676e317262,%rdx
    123f:	5f 79 30 
    1242:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    1249:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    1250:	48 b8 75 72 5f 30 77 	movabs $0x6b5f6e77305f7275,%rax
    1257:	6e 5f 6b 
    125a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    125e:	c7 45 88 33 79 5f 00 	movl   $0x5f7933,-0x78(%rbp)
    1265:	66 c7 85 4e ff ff ff 	movw   $0x7d,-0xb2(%rbp)
    126c:	7d 00 
    126e:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    1275:	48 89 c7             	mov    %rax,%rdi
    1278:	e8 63 fe ff ff       	callq  10e0 <strlen@plt>
    127d:	48 89 c1             	mov    %rax,%rcx
    1280:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    1287:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    128e:	48 89 ce             	mov    %rcx,%rsi
    1291:	48 89 c7             	mov    %rax,%rdi
    1294:	e8 57 fe ff ff       	callq  10f0 <MD5@plt>
    1299:	48 8d 85 4e ff ff ff 	lea    -0xb2(%rbp),%rax
    12a0:	48 89 c7             	mov    %rax,%rdi
    12a3:	e8 38 fe ff ff       	callq  10e0 <strlen@plt>
    12a8:	48 89 c1             	mov    %rax,%rcx
    12ab:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    12b2:	48 8d 85 4e ff ff ff 	lea    -0xb2(%rbp),%rax
    12b9:	48 89 ce             	mov    %rcx,%rsi
    12bc:	48 89 c7             	mov    %rax,%rdi
    12bf:	e8 2c fe ff ff       	callq  10f0 <MD5@plt>
    12c4:	c7 85 38 ff ff ff 00 	movl   $0x0,-0xc8(%rbp)
    12cb:	00 00 00 
    12ce:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
    12d5:	00 00 00 
    12d8:	eb 47                	jmp    1321 <__stack_chk_fail@plt+0x211>
    12da:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    12e0:	48 98                	cltq   
    12e2:	0f b6 84 05 50 ff ff 	movzbl -0xb0(%rbp,%rax,1),%eax
    12e9:	ff 
    12ea:	0f b6 c0             	movzbl %al,%eax
    12ed:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    12f1:	8b 95 38 ff ff ff    	mov    -0xc8(%rbp),%edx
    12f7:	48 63 d2             	movslq %edx,%rdx
    12fa:	48 01 d1             	add    %rdx,%rcx
    12fd:	89 c2                	mov    %eax,%edx
    12ff:	48 8d 35 fe 0c 00 00 	lea    0xcfe(%rip),%rsi        # 2004 <__stack_chk_fail@plt+0xef4>
    1306:	48 89 cf             	mov    %rcx,%rdi
    1309:	b8 00 00 00 00       	mov    $0x0,%eax
    130e:	e8 ed fd ff ff       	callq  1100 <sprintf@plt>
    1313:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    131a:	83 85 38 ff ff ff 02 	addl   $0x2,-0xc8(%rbp)
    1321:	83 bd 3c ff ff ff 0f 	cmpl   $0xf,-0xc4(%rbp)
    1328:	7e b0                	jle    12da <__stack_chk_fail@plt+0x1ca>
    132a:	c7 85 38 ff ff ff 00 	movl   $0x0,-0xc8(%rbp)
    1331:	00 00 00 
    1334:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)
    133b:	00 00 00 
    133e:	eb 47                	jmp    1387 <__stack_chk_fail@plt+0x277>
    1340:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    1346:	48 98                	cltq   
    1348:	0f b6 84 05 60 ff ff 	movzbl -0xa0(%rbp,%rax,1),%eax
    134f:	ff 
    1350:	0f b6 c0             	movzbl %al,%eax
    1353:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
    1357:	8b 95 38 ff ff ff    	mov    -0xc8(%rbp),%edx
    135d:	48 63 d2             	movslq %edx,%rdx
    1360:	48 01 d1             	add    %rdx,%rcx
    1363:	89 c2                	mov    %eax,%edx
    1365:	48 8d 35 98 0c 00 00 	lea    0xc98(%rip),%rsi        # 2004 <__stack_chk_fail@plt+0xef4>
    136c:	48 89 cf             	mov    %rcx,%rdi
    136f:	b8 00 00 00 00       	mov    $0x0,%eax
    1374:	e8 87 fd ff ff       	callq  1100 <sprintf@plt>
    1379:	83 85 40 ff ff ff 01 	addl   $0x1,-0xc0(%rbp)
    1380:	83 85 38 ff ff ff 02 	addl   $0x2,-0xc8(%rbp)
    1387:	83 bd 40 ff ff ff 0f 	cmpl   $0xf,-0xc0(%rbp)
    138e:	7e b0                	jle    1340 <__stack_chk_fail@plt+0x230>
    1390:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
    1397:	00 00 00 
    139a:	eb 23                	jmp    13bf <__stack_chk_fail@plt+0x2af>
    139c:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    13a2:	48 98                	cltq   
    13a4:	0f b6 94 05 70 ff ff 	movzbl -0x90(%rbp,%rax,1),%edx
    13ab:	ff 
    13ac:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    13b2:	48 98                	cltq   
    13b4:	88 54 05 d0          	mov    %dl,-0x30(%rbp,%rax,1)
    13b8:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)
    13bf:	83 bd 44 ff ff ff 1a 	cmpl   $0x1a,-0xbc(%rbp)
    13c6:	7e d4                	jle    139c <__stack_chk_fail@plt+0x28c>
    13c8:	0f b6 45 9d          	movzbl -0x63(%rbp),%eax
    13cc:	88 45 eb             	mov    %al,-0x15(%rbp)
    13cf:	0f b6 45 a2          	movzbl -0x5e(%rbp),%eax
    13d3:	88 45 ec             	mov    %al,-0x14(%rbp)
    13d6:	0f b6 45 ad          	movzbl -0x53(%rbp),%eax
    13da:	88 45 ed             	mov    %al,-0x13(%rbp)
    13dd:	0f b6 45 91          	movzbl -0x6f(%rbp),%eax
    13e1:	88 45 ee             	mov    %al,-0x12(%rbp)
    13e4:	0f b6 45 9e          	movzbl -0x62(%rbp),%eax
    13e8:	88 45 ef             	mov    %al,-0x11(%rbp)
    13eb:	0f b6 45 a8          	movzbl -0x58(%rbp),%eax
    13ef:	88 45 f0             	mov    %al,-0x10(%rbp)
    13f2:	0f b6 45 aa          	movzbl -0x56(%rbp),%eax
    13f6:	88 45 f1             	mov    %al,-0xf(%rbp)
    13f9:	0f b6 45 ad          	movzbl -0x53(%rbp),%eax
    13fd:	88 45 f2             	mov    %al,-0xe(%rbp)
    1400:	0f b6 85 4e ff ff ff 	movzbl -0xb2(%rbp),%eax
    1407:	88 45 f3             	mov    %al,-0xd(%rbp)
    140a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    1411:	48 89 c7             	mov    %rax,%rdi
    1414:	e8 c7 fc ff ff       	callq  10e0 <strlen@plt>
    1419:	48 83 f8 24          	cmp    $0x24,%rax
    141d:	74 07                	je     1426 <__stack_chk_fail@plt+0x316>
    141f:	b8 00 00 00 00       	mov    $0x0,%eax
    1424:	eb 4f                	jmp    1475 <__stack_chk_fail@plt+0x365>
    1426:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%rbp)
    142d:	00 00 00 
    1430:	eb 35                	jmp    1467 <__stack_chk_fail@plt+0x357>
    1432:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    1438:	48 63 d0             	movslq %eax,%rdx
    143b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    1442:	48 01 d0             	add    %rdx,%rax
    1445:	0f b6 10             	movzbl (%rax),%edx
    1448:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    144e:	48 98                	cltq   
    1450:	0f b6 44 05 d0       	movzbl -0x30(%rbp,%rax,1),%eax
    1455:	38 c2                	cmp    %al,%dl
    1457:	74 07                	je     1460 <__stack_chk_fail@plt+0x350>
    1459:	b8 00 00 00 00       	mov    $0x0,%eax
    145e:	eb 15                	jmp    1475 <__stack_chk_fail@plt+0x365>
    1460:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
    1467:	83 bd 48 ff ff ff 23 	cmpl   $0x23,-0xb8(%rbp)
    146e:	7e c2                	jle    1432 <__stack_chk_fail@plt+0x322>
    1470:	b8 01 00 00 00       	mov    $0x1,%eax
    1475:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    1479:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    1480:	00 00 
    1482:	74 05                	je     1489 <__stack_chk_fail@plt+0x379>
    1484:	e8 87 fc ff ff       	callq  1110 <__stack_chk_fail@plt>
    1489:	c9                   	leaveq 
    148a:	c3                   	retq   
    148b:	f3 0f 1e fa          	endbr64 
    148f:	55                   	push   %rbp
    1490:	48 89 e5             	mov    %rsp,%rbp
    1493:	48 83 ec 40          	sub    $0x40,%rsp
    1497:	89 7d cc             	mov    %edi,-0x34(%rbp)
    149a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    149e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    14a5:	00 00 
    14a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    14ab:	31 c0                	xor    %eax,%eax
    14ad:	48 8d 3d 55 0b 00 00 	lea    0xb55(%rip),%rdi        # 2009 <__stack_chk_fail@plt+0xef9>
    14b4:	b8 00 00 00 00       	mov    $0x0,%eax
    14b9:	e8 f2 fb ff ff       	callq  10b0 <printf@plt>
    14be:	48 8b 15 4b 2b 00 00 	mov    0x2b4b(%rip),%rdx        # 4010 <stdin@@GLIBC_2.2.5>
    14c5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    14c9:	be 25 00 00 00       	mov    $0x25,%esi
    14ce:	48 89 c7             	mov    %rax,%rdi
    14d1:	e8 fa fb ff ff       	callq  10d0 <fgets@plt>
    14d6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    14da:	48 89 c7             	mov    %rax,%rdi
    14dd:	e8 27 fd ff ff       	callq  1209 <__stack_chk_fail@plt+0xf9>
    14e2:	84 c0                	test   %al,%al
    14e4:	74 0e                	je     14f4 <__stack_chk_fail@plt+0x3e4>
    14e6:	48 8d 3d 35 0b 00 00 	lea    0xb35(%rip),%rdi        # 2022 <__stack_chk_fail@plt+0xf12>
    14ed:	e8 ce fb ff ff       	callq  10c0 <puts@plt>
    14f2:	eb 0c                	jmp    1500 <__stack_chk_fail@plt+0x3f0>
    14f4:	48 8d 3d 3a 0b 00 00 	lea    0xb3a(%rip),%rdi        # 2035 <__stack_chk_fail@plt+0xf25>
    14fb:	e8 c0 fb ff ff       	callq  10c0 <puts@plt>
    1500:	b8 00 00 00 00       	mov    $0x0,%eax
    1505:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1509:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1510:	00 00 
    1512:	74 05                	je     1519 <__stack_chk_fail@plt+0x409>
    1514:	e8 f7 fb ff ff       	callq  1110 <__stack_chk_fail@plt>
    1519:	c9                   	leaveq 
    151a:	c3                   	retq   
    151b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1520:	f3 0f 1e fa          	endbr64 
    1524:	41 57                	push   %r15
    1526:	4c 8d 3d 4b 28 00 00 	lea    0x284b(%rip),%r15        # 3d78 <__stack_chk_fail@plt+0x2c68>
    152d:	41 56                	push   %r14
    152f:	49 89 d6             	mov    %rdx,%r14
    1532:	41 55                	push   %r13
    1534:	49 89 f5             	mov    %rsi,%r13
    1537:	41 54                	push   %r12
    1539:	41 89 fc             	mov    %edi,%r12d
    153c:	55                   	push   %rbp
    153d:	48 8d 2d 3c 28 00 00 	lea    0x283c(%rip),%rbp        # 3d80 <__stack_chk_fail@plt+0x2c70>
    1544:	53                   	push   %rbx
    1545:	4c 29 fd             	sub    %r15,%rbp
    1548:	48 83 ec 08          	sub    $0x8,%rsp
    154c:	e8 af fa ff ff       	callq  1000 <__cxa_finalize@plt-0xa0>
    1551:	48 c1 fd 03          	sar    $0x3,%rbp
    1555:	74 1f                	je     1576 <__stack_chk_fail@plt+0x466>
    1557:	31 db                	xor    %ebx,%ebx
    1559:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1560:	4c 89 f2             	mov    %r14,%rdx
    1563:	4c 89 ee             	mov    %r13,%rsi
    1566:	44 89 e7             	mov    %r12d,%edi
    1569:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    156d:	48 83 c3 01          	add    $0x1,%rbx
    1571:	48 39 dd             	cmp    %rbx,%rbp
    1574:	75 ea                	jne    1560 <__stack_chk_fail@plt+0x450>
    1576:	48 83 c4 08          	add    $0x8,%rsp
    157a:	5b                   	pop    %rbx
    157b:	5d                   	pop    %rbp
    157c:	41 5c                	pop    %r12
    157e:	41 5d                	pop    %r13
    1580:	41 5e                	pop    %r14
    1582:	41 5f                	pop    %r15
    1584:	c3                   	retq   
    1585:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    158c:	00 00 00 00 
    1590:	f3 0f 1e fa          	endbr64 
    1594:	c3                   	retq   

Disassembly of section .fini:

0000000000001598 <.fini>:
    1598:	f3 0f 1e fa          	endbr64 
    159c:	48 83 ec 08          	sub    $0x8,%rsp
    15a0:	48 83 c4 08          	add    $0x8,%rsp
    15a4:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <.rodata>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	25 30 32 78 00       	and    $0x783230,%eax
    2009:	45 6e                	rex.RB outsb %ds:(%rsi),(%dx)
    200b:	74 65                	je     2072 <__stack_chk_fail@plt+0xf62>
    200d:	72 20                	jb     202f <__stack_chk_fail@plt+0xf1f>
    200f:	79 6f                	jns    2080 <__stack_chk_fail@plt+0xf70>
    2011:	75 72                	jne    2085 <__stack_chk_fail@plt+0xf75>
    2013:	20 6c 69 63          	and    %ch,0x63(%rcx,%rbp,2)
    2017:	65 6e                	outsb  %gs:(%rsi),(%dx)
    2019:	73 65                	jae    2080 <__stack_chk_fail@plt+0xf70>
    201b:	20 6b 65             	and    %ch,0x65(%rbx)
    201e:	79 3a                	jns    205a <__stack_chk_fail@plt+0xf4a>
    2020:	20 00                	and    %al,(%rax)
    2022:	54                   	push   %rsp
    2023:	68 61 74 20 6b       	pushq  $0x6b207461
    2028:	65 79 20             	gs jns 204b <__stack_chk_fail@plt+0xf3b>
    202b:	69 73 20 76 61 6c 69 	imul   $0x696c6176,0x20(%rbx),%esi
    2032:	64 2e 00 54 68 61    	fs add %dl,%cs:0x61(%rax,%rbp,2)
    2038:	74 20                	je     205a <__stack_chk_fail@plt+0xf4a>
    203a:	6b 65 79 20          	imul   $0x20,0x79(%rbp),%esp
    203e:	69 73 20 69 6e 76 61 	imul   $0x61766e69,0x20(%rbx),%esi
    2045:	6c                   	insb   (%dx),%es:(%rdi)
    2046:	69                   	.byte 0x69
    2047:	64                   	fs
    2048:	2e                   	cs
	...

Disassembly of section .eh_frame_hdr:

000000000000204c <.eh_frame_hdr>:
    204c:	01 1b                	add    %ebx,(%rbx)
    204e:	03 3b                	add    (%rbx),%edi
    2050:	48 00 00             	rex.W add %al,(%rax)
    2053:	00 08                	add    %cl,(%rax)
    2055:	00 00                	add    %al,(%rax)
    2057:	00 d4                	add    %dl,%ah
    2059:	ef                   	out    %eax,(%dx)
    205a:	ff                   	(bad)  
    205b:	ff                   	(bad)  
    205c:	7c 00                	jl     205e <__stack_chk_fail@plt+0xf4e>
    205e:	00 00                	add    %al,(%rax)
    2060:	54                   	push   %rsp
    2061:	f0 ff                	lock (bad) 
    2063:	ff a4 00 00 00 64 f0 	jmpq   *-0xf9c0000(%rax,%rax,1)
    206a:	ff                   	(bad)  
    206b:	ff                   	(bad)  
    206c:	bc 00 00 00 d4       	mov    $0xd4000000,%esp
    2071:	f0 ff                	lock (bad) 
    2073:	ff 64 00 00          	jmpq   *0x0(%rax,%rax,1)
    2077:	00 bd f1 ff ff d4    	add    %bh,-0x2b00000f(%rbp)
    207d:	00 00                	add    %al,(%rax)
    207f:	00 3f                	add    %bh,(%rdi)
    2081:	f4                   	hlt    
    2082:	ff                   	(bad)  
    2083:	ff f4                	push   %rsp
    2085:	00 00                	add    %al,(%rax)
    2087:	00 d4                	add    %dl,%ah
    2089:	f4                   	hlt    
    208a:	ff                   	(bad)  
    208b:	ff 14 01             	callq  *(%rcx,%rax,1)
    208e:	00 00                	add    %al,(%rax)
    2090:	44 f5                	rex.R cmc 
    2092:	ff                   	(bad)  
    2093:	ff 5c 01 00          	lcall  *0x0(%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000002098 <.eh_frame>:
    2098:	14 00                	adc    $0x0,%al
    209a:	00 00                	add    %al,(%rax)
    209c:	00 00                	add    %al,(%rax)
    209e:	00 00                	add    %al,(%rax)
    20a0:	01 7a 52             	add    %edi,0x52(%rdx)
    20a3:	00 01                	add    %al,(%rcx)
    20a5:	78 10                	js     20b7 <__stack_chk_fail@plt+0xfa7>
    20a7:	01 1b                	add    %ebx,(%rbx)
    20a9:	0c 07                	or     $0x7,%al
    20ab:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    20b1:	00 00                	add    %al,(%rax)
    20b3:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20b6:	00 00                	add    %al,(%rax)
    20b8:	68 f0 ff ff 2f       	pushq  $0x2ffffff0
    20bd:	00 00                	add    %al,(%rax)
    20bf:	00 00                	add    %al,(%rax)
    20c1:	44 07                	rex.R (bad) 
    20c3:	10 00                	adc    %al,(%rax)
    20c5:	00 00                	add    %al,(%rax)
    20c7:	00 24 00             	add    %ah,(%rax,%rax,1)
    20ca:	00 00                	add    %al,(%rax)
    20cc:	34 00                	xor    $0x0,%al
    20ce:	00 00                	add    %al,(%rax)
    20d0:	50                   	push   %rax
    20d1:	ef                   	out    %eax,(%dx)
    20d2:	ff                   	(bad)  
    20d3:	ff 80 00 00 00 00    	incl   0x0(%rax)
    20d9:	0e                   	(bad)  
    20da:	10 46 0e             	adc    %al,0xe(%rsi)
    20dd:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20e0:	0b 77 08             	or     0x8(%rdi),%esi
    20e3:	80 00 3f             	addb   $0x3f,(%rax)
    20e6:	1a 3a                	sbb    (%rdx),%bh
    20e8:	2a 33                	sub    (%rbx),%dh
    20ea:	24 22                	and    $0x22,%al
    20ec:	00 00                	add    %al,(%rax)
    20ee:	00 00                	add    %al,(%rax)
    20f0:	14 00                	adc    $0x0,%al
    20f2:	00 00                	add    %al,(%rax)
    20f4:	5c                   	pop    %rsp
    20f5:	00 00                	add    %al,(%rax)
    20f7:	00 a8 ef ff ff 10    	add    %ch,0x10ffffef(%rax)
	...
    2105:	00 00                	add    %al,(%rax)
    2107:	00 14 00             	add    %dl,(%rax,%rax,1)
    210a:	00 00                	add    %al,(%rax)
    210c:	74 00                	je     210e <__stack_chk_fail@plt+0xffe>
    210e:	00 00                	add    %al,(%rax)
    2110:	a0 ef ff ff 70 00 00 	movabs 0x70ffffef,%al
    2117:	00 00 
    2119:	00 00                	add    %al,(%rax)
    211b:	00 00                	add    %al,(%rax)
    211d:	00 00                	add    %al,(%rax)
    211f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2122:	00 00                	add    %al,(%rax)
    2124:	8c 00                	mov    %es,(%rax)
    2126:	00 00                	add    %al,(%rax)
    2128:	e1 f0                	loope  211a <__stack_chk_fail@plt+0x100a>
    212a:	ff                   	(bad)  
    212b:	ff 82 02 00 00 00    	incl   0x2(%rdx)
    2131:	45 0e                	rex.RB (bad) 
    2133:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2139:	03 79 02             	add    0x2(%rcx),%edi
    213c:	0c 07                	or     $0x7,%al
    213e:	08 00                	or     %al,(%rax)
    2140:	1c 00                	sbb    $0x0,%al
    2142:	00 00                	add    %al,(%rax)
    2144:	ac                   	lods   %ds:(%rsi),%al
    2145:	00 00                	add    %al,(%rax)
    2147:	00 43 f3             	add    %al,-0xd(%rbx)
    214a:	ff                   	(bad)  
    214b:	ff 90 00 00 00 00    	callq  *0x0(%rax)
    2151:	45 0e                	rex.RB (bad) 
    2153:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2159:	02 87 0c 07 08 00    	add    0x8070c(%rdi),%al
    215f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    2163:	00 cc                	add    %cl,%ah
    2165:	00 00                	add    %al,(%rax)
    2167:	00 b8 f3 ff ff 65    	add    %bh,0x65fffff3(%rax)
    216d:	00 00                	add    %al,(%rax)
    216f:	00 00                	add    %al,(%rax)
    2171:	46 0e                	rex.RX (bad) 
    2173:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2179:	8e 03                	mov    (%rbx),%es
    217b:	45 0e                	rex.RB (bad) 
    217d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2183:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86302fcd <stdin@@GLIBC_2.2.5+0xffffffff862fefbd>
    2189:	06                   	(bad)  
    218a:	48 0e                	rex.W (bad) 
    218c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2192:	6e                   	outsb  %ds:(%rsi),(%dx)
    2193:	0e                   	(bad)  
    2194:	38 41 0e             	cmp    %al,0xe(%rcx)
    2197:	30 41 0e             	xor    %al,0xe(%rcx)
    219a:	28 42 0e             	sub    %al,0xe(%rdx)
    219d:	20 42 0e             	and    %al,0xe(%rdx)
    21a0:	18 42 0e             	sbb    %al,0xe(%rdx)
    21a3:	10 42 0e             	adc    %al,0xe(%rdx)
    21a6:	08 00                	or     %al,(%rax)
    21a8:	10 00                	adc    %al,(%rax)
    21aa:	00 00                	add    %al,(%rax)
    21ac:	14 01                	adc    $0x1,%al
    21ae:	00 00                	add    %al,(%rax)
    21b0:	e0 f3                	loopne 21a5 <__stack_chk_fail@plt+0x1095>
    21b2:	ff                   	(bad)  
    21b3:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 21b9 <__stack_chk_fail@plt+0x10a9>
    21b9:	00 00                	add    %al,(%rax)
    21bb:	00 00                	add    %al,(%rax)
    21bd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003d78 <.init_array>:
    3d78:	00 12                	add    %dl,(%rdx)
    3d7a:	00 00                	add    %al,(%rax)
    3d7c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003d80 <.fini_array>:
    3d80:	c0 11 00             	rclb   $0x0,(%rcx)
    3d83:	00 00                	add    %al,(%rax)
    3d85:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003d88 <.dynamic>:
    3d88:	01 00                	add    %eax,(%rax)
    3d8a:	00 00                	add    %al,(%rax)
    3d8c:	00 00                	add    %al,(%rax)
    3d8e:	00 00                	add    %al,(%rax)
    3d90:	01 00                	add    %eax,(%rax)
    3d92:	00 00                	add    %al,(%rax)
    3d94:	00 00                	add    %al,(%rax)
    3d96:	00 00                	add    %al,(%rax)
    3d98:	01 00                	add    %eax,(%rax)
    3d9a:	00 00                	add    %al,(%rax)
    3d9c:	00 00                	add    %al,(%rax)
    3d9e:	00 00                	add    %al,(%rax)
    3da0:	5b                   	pop    %rbx
    3da1:	00 00                	add    %al,(%rax)
    3da3:	00 00                	add    %al,(%rax)
    3da5:	00 00                	add    %al,(%rax)
    3da7:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3daa:	00 00                	add    %al,(%rax)
    3dac:	00 00                	add    %al,(%rax)
    3dae:	00 00                	add    %al,(%rax)
    3db0:	00 10                	add    %dl,(%rax)
    3db2:	00 00                	add    %al,(%rax)
    3db4:	00 00                	add    %al,(%rax)
    3db6:	00 00                	add    %al,(%rax)
    3db8:	0d 00 00 00 00       	or     $0x0,%eax
    3dbd:	00 00                	add    %al,(%rax)
    3dbf:	00 98 15 00 00 00    	add    %bl,0x15(%rax)
    3dc5:	00 00                	add    %al,(%rax)
    3dc7:	00 19                	add    %bl,(%rcx)
    3dc9:	00 00                	add    %al,(%rax)
    3dcb:	00 00                	add    %al,(%rax)
    3dcd:	00 00                	add    %al,(%rax)
    3dcf:	00 78 3d             	add    %bh,0x3d(%rax)
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	1b 00                	sbb    (%rax),%eax
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	08 00                	or     %al,(%rax)
    3de2:	00 00                	add    %al,(%rax)
    3de4:	00 00                	add    %al,(%rax)
    3de6:	00 00                	add    %al,(%rax)
    3de8:	1a 00                	sbb    (%rax),%al
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
    3dee:	00 00                	add    %al,(%rax)
    3df0:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 3df7 <__stack_chk_fail@plt+0x2ce7>
    3df7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	08 00                	or     %al,(%rax)
    3e02:	00 00                	add    %al,(%rax)
    3e04:	00 00                	add    %al,(%rax)
    3e06:	00 00                	add    %al,(%rax)
    3e08:	f5                   	cmc    
    3e09:	fe                   	(bad)  
    3e0a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e1d <__stack_chk_fail@plt+0x2d0d>
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 18                	add    %bl,(%rax)
    3e21:	05 00 00 00 00       	add    $0x0,%eax
    3e26:	00 00                	add    %al,(%rax)
    3e28:	06                   	(bad)  
    3e29:	00 00                	add    %al,(%rax)
    3e2b:	00 00                	add    %al,(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 c8                	add    %cl,%al
    3e31:	03 00                	add    (%rax),%eax
    3e33:	00 00                	add    %al,(%rax)
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 0a                	add    %cl,(%rdx)
    3e39:	00 00                	add    %al,(%rax)
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 db                	add    %bl,%bl
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 0b                	add    %cl,(%rbx)
    3e49:	00 00                	add    %al,(%rax)
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 18                	add    %bl,(%rax)
    3e51:	00 00                	add    %al,(%rax)
    3e53:	00 00                	add    %al,(%rax)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e5d <__stack_chk_fail@plt+0x2d4d>
	...
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 03                	add    %al,(%rbx)
    3e69:	00 00                	add    %al,(%rax)
    3e6b:	00 00                	add    %al,(%rax)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 88 3f 00 00 00    	add    %cl,0x3f(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 02                	add    %al,(%rdx)
    3e79:	00 00                	add    %al,(%rax)
    3e7b:	00 00                	add    %al,(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 a8 00 00 00 00    	add    %ch,0x0(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 14 00             	add    %dl,(%rax,%rax,1)
    3e8a:	00 00                	add    %al,(%rax)
    3e8c:	00 00                	add    %al,(%rax)
    3e8e:	00 00                	add    %al,(%rax)
    3e90:	07                   	(bad)  
    3e91:	00 00                	add    %al,(%rax)
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 17                	add    %dl,(%rdi)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 38                	add    %bh,(%rax)
    3ea1:	07                   	(bad)  
    3ea2:	00 00                	add    %al,(%rax)
    3ea4:	00 00                	add    %al,(%rax)
    3ea6:	00 00                	add    %al,(%rax)
    3ea8:	07                   	(bad)  
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 60 06             	add    %ah,0x6(%rax)
    3eb2:	00 00                	add    %al,(%rax)
    3eb4:	00 00                	add    %al,(%rax)
    3eb6:	00 00                	add    %al,(%rax)
    3eb8:	08 00                	or     %al,(%rax)
    3eba:	00 00                	add    %al,(%rax)
    3ebc:	00 00                	add    %al,(%rax)
    3ebe:	00 00                	add    %al,(%rax)
    3ec0:	d8 00                	fadds  (%rax)
    3ec2:	00 00                	add    %al,(%rax)
    3ec4:	00 00                	add    %al,(%rax)
    3ec6:	00 00                	add    %al,(%rax)
    3ec8:	09 00                	or     %eax,(%rax)
    3eca:	00 00                	add    %al,(%rax)
    3ecc:	00 00                	add    %al,(%rax)
    3ece:	00 00                	add    %al,(%rax)
    3ed0:	18 00                	sbb    %al,(%rax)
    3ed2:	00 00                	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	1e                   	(bad)  
    3ed9:	00 00                	add    %al,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 08                	add    %cl,(%rax)
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 fb                	add    %bh,%bl
    3ee9:	ff                   	(bad)  
    3eea:	ff 6f 00             	ljmp   *0x0(%rdi)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 01                	add    %al,(%rcx)
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	08 00                	or     %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 fe                	add    %bh,%dh
    3ef9:	ff                   	(bad)  
    3efa:	ff 6f 00             	ljmp   *0x0(%rdi)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 10                	add    %dl,(%rax)
    3f01:	06                   	(bad)  
    3f02:	00 00                	add    %al,(%rax)
    3f04:	00 00                	add    %al,(%rax)
    3f06:	00 00                	add    %al,(%rax)
    3f08:	ff                   	(bad)  
    3f09:	ff                   	(bad)  
    3f0a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 02                	add    %al,(%rdx)
    3f11:	00 00                	add    %al,(%rax)
    3f13:	00 00                	add    %al,(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 f0                	add    %dh,%al
    3f19:	ff                   	(bad)  
    3f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 f4                	add    %dh,%ah
    3f21:	05 00 00 00 00       	add    $0x0,%eax
    3f26:	00 00                	add    %al,(%rax)
    3f28:	f9                   	stc    
    3f29:	ff                   	(bad)  
    3f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003f88 <.got>:
    3f88:	88 3d 00 00 00 00    	mov    %bh,0x0(%rip)        # 3f8e <__stack_chk_fail@plt+0x2e7e>
	...
    3f9e:	00 00                	add    %al,(%rax)
    3fa0:	30 10                	xor    %dl,(%rax)
    3fa2:	00 00                	add    %al,(%rax)
    3fa4:	00 00                	add    %al,(%rax)
    3fa6:	00 00                	add    %al,(%rax)
    3fa8:	40 10 00             	adc    %al,(%rax)
    3fab:	00 00                	add    %al,(%rax)
    3fad:	00 00                	add    %al,(%rax)
    3faf:	00 50 10             	add    %dl,0x10(%rax)
    3fb2:	00 00                	add    %al,(%rax)
    3fb4:	00 00                	add    %al,(%rax)
    3fb6:	00 00                	add    %al,(%rax)
    3fb8:	60                   	(bad)  
    3fb9:	10 00                	adc    %al,(%rax)
    3fbb:	00 00                	add    %al,(%rax)
    3fbd:	00 00                	add    %al,(%rax)
    3fbf:	00 70 10             	add    %dh,0x10(%rax)
    3fc2:	00 00                	add    %al,(%rax)
    3fc4:	00 00                	add    %al,(%rax)
    3fc6:	00 00                	add    %al,(%rax)
    3fc8:	80 10 00             	adcb   $0x0,(%rax)
    3fcb:	00 00                	add    %al,(%rax)
    3fcd:	00 00                	add    %al,(%rax)
    3fcf:	00 90 10 00 00 00    	add    %dl,0x10(%rax)
	...

Disassembly of section .data:

0000000000004000 <.data>:
	...
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004010 <stdin@@GLIBC_2.2.5>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <__cxa_finalize@plt-0x1028>
   a:	74 75                	je     81 <__cxa_finalize@plt-0x101f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 31 37 75 62    	xor    %ch,0x62753731(%rip)        # 62753748 <stdin@@GLIBC_2.2.5+0x6274f738>
  17:	75 6e                	jne    87 <__cxa_finalize@plt-0x1019>
  19:	74 75                	je     90 <__cxa_finalize@plt-0x1010>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	30 2e                	xor    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 39                	and    %bh,(%rcx)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)
